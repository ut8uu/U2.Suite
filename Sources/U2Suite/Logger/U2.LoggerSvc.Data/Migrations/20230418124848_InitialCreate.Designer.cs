// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using U2.LoggerSvc.Data;

#nullable disable

namespace U2.LoggerSvc.Data.Migrations
{
    [DbContext(typeof(LoggerDbContext))]
    [Migration("20230418124848_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("U2.LoggerSvc.Data.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Band")
                        .HasColumnType("TEXT");

                    b.Property<string>("BandRx")
                        .HasColumnType("TEXT");

                    b.Property<string>("Call")
                        .HasColumnType("TEXT");

                    b.Property<int>("Continent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cqz")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTimeOff")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTimeOn")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Dirty")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Dxcc")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Frequency")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FrequencyRx")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gridsquare")
                        .HasColumnType("TEXT");

                    b.Property<string>("Iota")
                        .HasColumnType("TEXT");

                    b.Property<string>("IotaIslandId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRunQso")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ituz")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Lat")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Lon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mode")
                        .HasColumnType("TEXT");

                    b.Property<string>("MyCity")
                        .HasColumnType("TEXT");

                    b.Property<string>("MyCountry")
                        .HasColumnType("TEXT");

                    b.Property<int>("MyCqZone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MyGridsquare")
                        .HasColumnType("TEXT");

                    b.Property<int>("MyItuZone")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MyLat")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MyLon")
                        .HasColumnType("TEXT");

                    b.Property<string>("MyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Operator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Propagation")
                        .HasColumnType("TEXT");

                    b.Property<string>("QrzId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RstRcvd")
                        .HasColumnType("TEXT");

                    b.Property<string>("RstSent")
                        .HasColumnType("TEXT");

                    b.Property<string>("SatMode")
                        .HasColumnType("TEXT");

                    b.Property<string>("SatName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LogEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
